"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @format */
var apollo_server_express_1 = require("apollo-server-express");
var typeDefs = apollo_server_express_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  enum Role {\n    OWNER\n    MEMBER\n  }\n\n  type Image {\n    _id: ID!\n    url: String!\n    author: User!\n  }\n\n  type Post {\n    _id: ID!\n    author: User!\n    description: String!\n    createdAt: String!\n    picture: String!\n    likes: [User]!\n    comments: [Comment]!\n  }\n\n  type Comment {\n    _id: ID!\n    content: String!\n    author: User!\n    parentPost: User!\n    createdAt: String!\n    likes: [User]!\n  }\n\n  type File {\n    filename: String!\n    mimetype: String!\n    encoding: String!\n    uri: String!\n  }\n\n  type Query {\n    getMe: User!\n    getUserById(input: ID!): User!\n    getUsers: [User]!\n    getAllPosts: [Post]!\n    getUserPosts(input: ID!): [Post]!\n    getPost(input: ID!): Post!\n    getPostComments(input: ID!): [Comment]!\n    getFollowers(input: ID!): [User]!\n    getFollowedUsers(input: ID!): [User]!\n  }\n\n  type Mutation {\n    unfollowUser(input: ID!): User!\n    singleUpload(file: Upload!): File!\n    createPost(input: NewPostInput!): Post!\n    createUser(input: SignupInput!): AuthUser!\n    loginUser(input: SigninInput!): AuthUser!\n    createComment(input: NewCommentInput!): Comment!\n    likePost(input: ID!): Post\n    likeComment(input: ID!): Comment!\n    followUser(input: ID!): User!\n    unlikePost(input: ID!): Post!\n    changeAvatar(file: Upload!): File!\n  }\n\n  # USER && AUTH\n  type User {\n    _id: ID!\n    email: String!\n    password: String!\n    name: String!\n    username: String!\n    createdAt: String!\n    age: Int!\n    avatar: String!\n    posts: [Post]!\n    likedPosts: [Post]!\n    images: [Image]!\n    followers: [User]!\n    following: [User]!\n    # role: Role!\n  }\n\n  type AuthUser {\n    token: String!\n    user: User!\n  }\n  # USER && AUTH\n\n  # Authentication INPUT\n\n  input SignupInput {\n    name: String!\n    username: String!\n    email: String!\n    password: String!\n  }\n\n  input SigninInput {\n    email: String!\n    password: String!\n  }\n\n  # Authentication INPUT\n\n  # POST && COMMENT INPUT\n\n  input NewPostInput {\n    description: String!\n    picture: String!\n  }\n\n  input NewCommentInput {\n    content: String!\n    _id: ID!\n  }\n\n  # POST && COMMENT INPUT\n"], ["\n  enum Role {\n    OWNER\n    MEMBER\n  }\n\n  type Image {\n    _id: ID!\n    url: String!\n    author: User!\n  }\n\n  type Post {\n    _id: ID!\n    author: User!\n    description: String!\n    createdAt: String!\n    picture: String!\n    likes: [User]!\n    comments: [Comment]!\n  }\n\n  type Comment {\n    _id: ID!\n    content: String!\n    author: User!\n    parentPost: User!\n    createdAt: String!\n    likes: [User]!\n  }\n\n  type File {\n    filename: String!\n    mimetype: String!\n    encoding: String!\n    uri: String!\n  }\n\n  type Query {\n    getMe: User!\n    getUserById(input: ID!): User!\n    getUsers: [User]!\n    getAllPosts: [Post]!\n    getUserPosts(input: ID!): [Post]!\n    getPost(input: ID!): Post!\n    getPostComments(input: ID!): [Comment]!\n    getFollowers(input: ID!): [User]!\n    getFollowedUsers(input: ID!): [User]!\n  }\n\n  type Mutation {\n    unfollowUser(input: ID!): User!\n    singleUpload(file: Upload!): File!\n    createPost(input: NewPostInput!): Post!\n    createUser(input: SignupInput!): AuthUser!\n    loginUser(input: SigninInput!): AuthUser!\n    createComment(input: NewCommentInput!): Comment!\n    likePost(input: ID!): Post\n    likeComment(input: ID!): Comment!\n    followUser(input: ID!): User!\n    unlikePost(input: ID!): Post!\n    changeAvatar(file: Upload!): File!\n  }\n\n  # USER && AUTH\n  type User {\n    _id: ID!\n    email: String!\n    password: String!\n    name: String!\n    username: String!\n    createdAt: String!\n    age: Int!\n    avatar: String!\n    posts: [Post]!\n    likedPosts: [Post]!\n    images: [Image]!\n    followers: [User]!\n    following: [User]!\n    # role: Role!\n  }\n\n  type AuthUser {\n    token: String!\n    user: User!\n  }\n  # USER && AUTH\n\n  # Authentication INPUT\n\n  input SignupInput {\n    name: String!\n    username: String!\n    email: String!\n    password: String!\n  }\n\n  input SigninInput {\n    email: String!\n    password: String!\n  }\n\n  # Authentication INPUT\n\n  # POST && COMMENT INPUT\n\n  input NewPostInput {\n    description: String!\n    picture: String!\n  }\n\n  input NewCommentInput {\n    content: String!\n    _id: ID!\n  }\n\n  # POST && COMMENT INPUT\n"])));
exports.default = typeDefs;
var templateObject_1;
